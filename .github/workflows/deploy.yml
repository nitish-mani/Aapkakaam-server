name: Deploy to EC2

on:
  push:
    branches: [ develop ]  # Your actual branch name

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
        
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      
    - name: Deploy with rsync
      run: |
        rsync -avz --exclude='.git/' --exclude='.github/' --exclude='node_modules/' \
          ./ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ secrets.TARGET_DIR }}/
          
    - name: Execute remote SSH commands
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Check if Node.js is installed, install if not
          if ! command -v node &> /dev/null; then
            echo "Node.js not found, installing..."
            # For Amazon Linux 2/AL2023
            if [ -f /etc/amazon-linux-release ]; then
              curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
              sudo yum install -y nodejs
            # For Ubuntu
            elif [ -f /etc/lsb-release ]; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            else
              echo "Unsupported OS"
              exit 1
            fi
          fi
          
          # Install PM2 globally if not installed
          if ! command -v pm2 &> /dev/null; then
            echo "PM2 not found, installing..."
            sudo npm install -g pm2
          fi
          
          cd ${{ secrets.TARGET_DIR }}
          
          # Set up environment variables
          echo "NODE_ENV=production" > .env
          echo "PORT=3000" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          
          # Install dependencies
          npm ci
          
          # Build if needed
          npm run build
          
          # Start/restart the application
          pm2 restart my-server || pm2 start index.js --name "my-server"
